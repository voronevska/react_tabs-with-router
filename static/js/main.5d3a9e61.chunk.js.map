{"version":3,"sources":["components/Navbar/Navbar.tsx","components/HomePage/HomePage.tsx","components/TabPage/TabPage.tsx","components/TabsList/TabsList.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["Navbar","className","to","isActive","cn","HomePage","TabPage","tab","selectedTabId","id","title","TabsList","tabs","tabId","useParams","selectedTabContent","find","content","map","PageNotFound","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"gPAGaA,EAAS,kBACpB,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAG,cAAe,CAC7C,YAAaD,KAHjB,kBASA,cAAC,IAAD,CACED,GAAG,QACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAG,cAAe,CAC7C,YAAaD,KAHjB,0BCnBKE,EAAW,kBACtB,oBAAIJ,UAAU,QAAd,wBCSWK,EAAqB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,cAEtCC,EAEEF,EAFFE,GACAC,EACEH,EADFG,MAGF,OACE,mCACE,oBACE,UAAQ,MACRT,UAAWG,IACT,CAAE,YAAaK,IAAOD,IAH1B,SAME,cAAC,IAAD,CAAMN,GAAE,gBAAWO,GAAnB,SACGC,SChBEC,EAAsB,SAAC,GAAc,IAAD,EAAXC,EAAW,EAAXA,KAC5BC,EAAUC,cAAVD,MAEFE,EAAkB,UAAGH,EAAKI,MAAK,SAACT,GAAD,OAASA,EAAIE,KAAOI,YAAjC,aAAG,EAAsCI,QAEjE,OACE,qBAAKhB,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGW,EAAKM,KAAI,SAACX,GAAD,OACR,cAAC,EAAD,CAEEA,IAAKA,EACLC,cAAeK,GAFVN,EAAIE,WAQjB,qBAAKR,UAAU,QAAQ,UAAQ,aAA/B,SACGc,GAAsB,8BChCpBI,EAAe,kBAC1B,oBAAIlB,UAAU,QAAd,6BCSIW,EAAO,CACX,CAAEH,GAAI,QAASC,MAAO,QAASO,QAAS,eACxC,CAAER,GAAI,QAASC,MAAO,QAASO,QAAS,eACxC,CAAER,GAAI,QAASC,MAAO,QAASO,QAAS,gBAG7BG,EAAM,kBACjB,qCACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAEzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUpB,GAAG,QAEzC,eAAC,IAAD,CAAOmB,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,CAAUV,KAAMA,MACtC,cAAC,IAAD,CAAOS,KAAK,SAASC,QAAS,cAAC,EAAD,CAAUV,KAAMA,SAGhD,cAAC,IAAD,CAAOS,KAAK,IAAIC,QAAS,cAAC,EAAD,aC1B/BE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5d3a9e61.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => (\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => cn('navbar-item', {\n            'is-active': isActive,\n          })}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"/tabs\"\n          className={({ isActive }) => cn('navbar-item', {\n            'is-active': isActive,\n          })}\n        >\n          Tabs\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">\n    Home page\n  </h1>\n);\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tab: Tab;\n  selectedTabId?: string;\n};\n\nexport const TabPage: FC<Props> = ({ tab, selectedTabId }) => {\n  const {\n    id,\n    title,\n  } = tab;\n\n  return (\n    <>\n      <li\n        data-cy=\"Tab\"\n        className={cn(\n          { 'is-active': id === selectedTabId },\n        )}\n      >\n        <Link to={`/tabs/${id}`}>\n          {title}\n        </Link>\n      </li>\n    </>\n  );\n};\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Tab } from '../../types/Tab';\nimport { TabPage } from '../TabPage/TabPage';\n\ntype Props = {\n  tabs: Tab[]\n};\n\nexport const TabsList: FC<Props> = ({ tabs }) => {\n  const { tabId } = useParams();\n\n  const selectedTabContent = tabs.find((tab) => tab.id === tabId)?.content;\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Tabs page</h1>\n\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map((tab) => (\n              <TabPage\n                key={tab.id}\n                tab={tab}\n                selectedTabId={tabId}\n              />\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTabContent || 'Please select a tab'}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">\n    Page not found\n  </h1>\n);\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './components/HomePage';\nimport { TabsList } from './components/TabsList';\nimport { PageNotFound } from './components/PageNotFound';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => (\n  <>\n    <Navbar />\n\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n\n      <Route path=\"home\" element={<Navigate to=\"/\" />} />\n\n      <Route path=\"tabs\">\n        <Route index element={<TabsList tabs={tabs} />} />\n        <Route path=\":tabId\" element={<TabsList tabs={tabs} />} />\n      </Route>\n\n      <Route path=\"*\" element={<PageNotFound />} />\n    </Routes>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}